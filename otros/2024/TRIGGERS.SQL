ESTE ES EL QUE SIRVE


DELIMITER ;;
CREATE TRIGGER `alcance_curricular_BEFORE_INSERT` BEFORE INSERT ON `alcance_curricular` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `alcance_curricular_BEFORE_UPDATE` BEFORE UPDATE ON `alcance_curricular` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `areaconocimiento_BEFORE_INSERT` BEFORE INSERT ON `areaconocimiento` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `areaconocimiento_BEFORE_UPDATE` BEFORE UPDATE ON `areaconocimiento` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `aspecto_BEFORE_INSERT` BEFORE INSERT ON `aspecto` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `aspecto_BEFORE_UPDATE` BEFORE UPDATE ON `aspecto` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `autorfuncion_BEFORE_INSERT` BEFORE INSERT ON `autorfuncion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `autorfuncion_BEFORE_UPDATE` BEFORE UPDATE ON `autorfuncion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `calendario_BEFORE_INSERT` BEFORE INSERT ON `calendario` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `calendario_BEFORE_UPDATE` BEFORE UPDATE ON `calendario` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificacion_BEFORE_INSERT` BEFORE INSERT ON `clasificacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificacion_BEFORE_UPDATE` BEFORE UPDATE ON `clasificacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificacion_observacion_BEFORE_INSERT` BEFORE INSERT ON `clasificacion_observacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificacion_observacion_BEFORE_UPDATE` BEFORE UPDATE ON `clasificacion_observacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificador_cancelable_BEFORE_INSERT` BEFORE INSERT ON `clasificador_cancelable` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificador_cancelable_BEFORE_UPDATE` BEFORE UPDATE ON `clasificador_cancelable` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificador_criterio1_BEFORE_INSERT` BEFORE INSERT ON `clasificador_criterio1` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificador_criterio1_BEFORE_UPDATE` BEFORE UPDATE ON `clasificador_criterio1` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificador_criterio2_BEFORE_INSERT` BEFORE INSERT ON `clasificador_criterio2` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificador_criterio2_BEFORE_UPDATE` BEFORE UPDATE ON `clasificador_criterio2` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificador_criterio3_BEFORE_INSERT` BEFORE INSERT ON `clasificador_criterio3` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificador_criterio3_BEFORE_UPDATE` BEFORE UPDATE ON `clasificador_criterio3` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificador_ejemplo_BEFORE_INSERT` BEFORE INSERT ON `clasificador_ejemplo` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificador_ejemplo_BEFORE_UPDATE` BEFORE UPDATE ON `clasificador_ejemplo` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificador_noevaluable_BEFORE_INSERT` BEFORE INSERT ON `clasificador_noevaluable` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificador_noevaluable_BEFORE_UPDATE` BEFORE UPDATE ON `clasificador_noevaluable` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `clasificador_tiporecurso_BEFORE_INSERT` BEFORE INSERT ON `clasificador_tiporecurso` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `clasificador_tiporecurso_BEFORE_UPDATE` BEFORE UPDATE ON `clasificador_tiporecurso` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `correo_autor_BEFORE_INSERT` BEFORE INSERT ON `correo_autor` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `correo_autor_BEFORE_UPDATE` BEFORE UPDATE ON `correo_autor` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `correo_salida_BEFORE_INSERT` BEFORE INSERT ON `correo_salida` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `correo_salida_BEFORE_UPDATE` BEFORE UPDATE ON `correo_salida` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `correo_salida_para_BEFORE_INSERT` BEFORE INSERT ON `correo_salida_para` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `correo_salida_para_BEFORE_UPDATE` BEFORE UPDATE ON `correo_salida_para` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `ctacorreo_BEFORE_INSERT` BEFORE INSERT ON `ctacorreo` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `ctacorreo_BEFORE_UPDATE` BEFORE UPDATE ON `ctacorreo` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `dirigidoa_BEFORE_INSERT` BEFORE INSERT ON `dirigidoa` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `dirigidoa_BEFORE_UPDATE` BEFORE UPDATE ON `dirigidoa` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `documento_BEFORE_INSERT` BEFORE INSERT ON `documento` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `documento_BEFORE_UPDATE` BEFORE UPDATE ON `documento` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `encuesta_observacion_BEFORE_INSERT` BEFORE INSERT ON `encuesta_observacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `encuesta_observacion_BEFORE_UPDATE` BEFORE UPDATE ON `encuesta_observacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `encuesta_reactivo_BEFORE_INSERT` BEFORE INSERT ON `encuesta_reactivo` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `encuesta_reactivo_BEFORE_UPDATE` BEFORE UPDATE ON `encuesta_reactivo` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `encuesta_respuesta_BEFORE_INSERT` BEFORE INSERT ON `encuesta_respuesta` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `encuesta_respuesta_BEFORE_UPDATE` BEFORE UPDATE ON `encuesta_respuesta` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `estado_BEFORE_INSERT` BEFORE INSERT ON `estado` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `estado_BEFORE_UPDATE` BEFORE UPDATE ON `estado` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `estado_activo_BEFORE_INSERT` BEFORE INSERT ON `estado_activo` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `estado_activo_BEFORE_UPDATE` BEFORE UPDATE ON `estado_activo` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `estado_encuesta_BEFORE_INSERT` BEFORE INSERT ON `estado_encuesta` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `estado_encuesta_BEFORE_UPDATE` BEFORE UPDATE ON `estado_encuesta` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `estado_evaluacion_BEFORE_INSERT` BEFORE INSERT ON `estado_evaluacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `estado_evaluacion_BEFORE_UPDATE` BEFORE UPDATE ON `estado_evaluacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluacion_BEFORE_INSERT` BEFORE INSERT ON `evaluacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluacion_BEFORE_UPDATE` BEFORE UPDATE ON `evaluacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluacion_fecha_BEFORE_INSERT` BEFORE INSERT ON `evaluacion_fecha` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluacion_fecha_BEFORE_UPDATE` BEFORE UPDATE ON `evaluacion_fecha` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluacion_observacion_BEFORE_INSERT` BEFORE INSERT ON `evaluacion_observacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluacion_observacion_BEFORE_UPDATE` BEFORE UPDATE ON `evaluacion_observacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluacion_observacion_gral_BEFORE_INSERT` BEFORE INSERT ON `evaluacion_observacion_gral` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluacion_observacion_gral_BEFORE_UPDATE` BEFORE UPDATE ON `evaluacion_observacion_gral` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluacion_observacion_observacion_gral_BEFORE_INSERT` BEFORE INSERT ON `evaluacion_observacion_observacion_gral` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluacion_observacion_observacion_gral_BEFORE_UPDATE` BEFORE UPDATE ON `evaluacion_observacion_observacion_gral` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluacion_tabla_BEFORE_INSERT` BEFORE INSERT ON `evaluacion_tabla` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluacion_tabla_BEFORE_UPDATE` BEFORE UPDATE ON `evaluacion_tabla` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluacion_tabla_reactivo_BEFORE_INSERT` BEFORE INSERT ON `evaluacion_tabla_reactivo` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluacion_tabla_reactivo_BEFORE_UPDATE` BEFORE UPDATE ON `evaluacion_tabla_reactivo` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluacion_tabla_version_BEFORE_INSERT` BEFORE INSERT ON `evaluacion_tabla_version` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluacion_tabla_version_BEFORE_UPDATE` BEFORE UPDATE ON `evaluacion_tabla_version` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluador_BEFORE_INSERT` BEFORE INSERT ON `evaluador` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluador_BEFORE_UPDATE` BEFORE UPDATE ON `evaluador` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `evaluador_aspecto_BEFORE_INSERT` BEFORE INSERT ON `evaluador_aspecto` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `evaluador_aspecto_BEFORE_UPDATE` BEFORE UPDATE ON `evaluador_aspecto` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `formatoentrega_BEFORE_INSERT` BEFORE INSERT ON `formatoentrega` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `formatoentrega_BEFORE_UPDATE` BEFORE UPDATE ON `formatoentrega` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `historialestado_BEFORE_INSERT` BEFORE INSERT ON `historialestado` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `historialestado_BEFORE_UPDATE` BEFORE UPDATE ON `historialestado` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `historialestado_encuesta_BEFORE_INSERT` BEFORE INSERT ON `historialestado_encuesta` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `historialestado_encuesta_BEFORE_UPDATE` BEFORE UPDATE ON `historialestado_encuesta` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `historialestado_evaluacion_BEFORE_INSERT` BEFORE INSERT ON `historialestado_evaluacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `historialestado_evaluacion_BEFORE_UPDATE` BEFORE UPDATE ON `historialestado_evaluacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `modalidad_BEFORE_INSERT` BEFORE INSERT ON `modalidad` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `modalidad_BEFORE_UPDATE` BEFORE UPDATE ON `modalidad` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `niveleducativo_BEFORE_INSERT` BEFORE INSERT ON `niveleducativo` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `niveleducativo_BEFORE_UPDATE` BEFORE UPDATE ON `niveleducativo` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `observacion_BEFORE_INSERT` BEFORE INSERT ON `observacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `observacion_BEFORE_UPDATE` BEFORE UPDATE ON `observacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `observacion_cancelacion_BEFORE_INSERT` BEFORE INSERT ON `observacion_cancelacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `observacion_cancelacion_BEFORE_UPDATE` BEFORE UPDATE ON `observacion_cancelacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `oficio_BEFORE_INSERT` BEFORE INSERT ON `oficio` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `oficio_BEFORE_UPDATE` BEFORE UPDATE ON `oficio` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `oficio_valoracion_BEFORE_INSERT` BEFORE INSERT ON `oficio_valoracion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `oficio_valoracion_BEFORE_UPDATE` BEFORE UPDATE ON `oficio_valoracion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `palabraclave_BEFORE_INSERT` BEFORE INSERT ON `palabraclave` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `palabraclave_BEFORE_UPDATE` BEFORE UPDATE ON `palabraclave` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `personal_BEFORE_INSERT` BEFORE INSERT ON `personal` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `personal_BEFORE_UPDATE` BEFORE UPDATE ON `personal` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `recurso_BEFORE_INSERT` BEFORE INSERT ON `recurso` FOR EACH ROW BEGIN
	declare auxNC varchar(255);
    declare existe boolean;
    ciclo:
		repeat
			set auxNC = conv(floor(rand() * 99999999999999), 20, 36);
			select count(numcontrol) into existe from recurso where numcontrol = auxNC;
		until existe = 0
		end repeat ciclo;
	set new.numcontrol = auxNC;
    if new.auditinsert is null then
		set new.auditinsert = current_timestamp();
    end if;
END;;
CREATE TRIGGER `recurso_AFTER_INSERT` AFTER INSERT ON `recurso` FOR EACH ROW BEGIN
	insert into historialestado values (null, new.id, new.estado_id, null,now());
END;;
CREATE TRIGGER `recurso_BEFORE_UPDATE` BEFORE UPDATE ON `recurso` FOR EACH ROW BEGIN
		set new.auditlastupdate = current_timestamp();
END;;
CREATE TRIGGER `recurso_AFTER_UPDATE` AFTER UPDATE ON `recurso` FOR EACH ROW BEGIN
	insert into historialestado values (null, new.id, new.estado_id, null,now());
END;;
CREATE TRIGGER `recurso_autor_BEFORE_INSERT` BEFORE INSERT ON `recurso_autor` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `recurso_autor_BEFORE_UPDATE` BEFORE UPDATE ON `recurso_autor` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `recurso_dirigidoa_BEFORE_INSERT` BEFORE INSERT ON `recurso_dirigidoa` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `recurso_dirigidoa_BEFORE_UPDATE` BEFORE UPDATE ON `recurso_dirigidoa` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `recursoenweb_BEFORE_INSERT` BEFORE INSERT ON `recursoenweb` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `recursoenweb_BEFORE_UPDATE` BEFORE UPDATE ON `recursoenweb` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `recursoevaluador_BEFORE_INSERT` BEFORE INSERT ON `recursoevaluador` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `recursoevaluador_BEFORE_UPDATE` BEFORE UPDATE ON `recursoevaluador` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `registro_acceso_BEFORE_INSERT` BEFORE INSERT ON `registro_acceso` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `registro_acceso_BEFORE_UPDATE` BEFORE UPDATE ON `registro_acceso` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `rol_BEFORE_INSERT` BEFORE INSERT ON `rol` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `rol_BEFORE_UPDATE` BEFORE UPDATE ON `rol` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `solicitud_cancelacion_BEFORE_INSERT` BEFORE INSERT ON `solicitud_cancelacion` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `solicitud_cancelacion_BEFORE_UPDATE` BEFORE UPDATE ON `solicitud_cancelacion` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `tipodocumento_BEFORE_INSERT` BEFORE INSERT ON `tipodocumento` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `tipodocumento_BEFORE_UPDATE` BEFORE UPDATE ON `tipodocumento` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `unidadacademica_BEFORE_INSERT` BEFORE INSERT ON `unidadacademica` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `unidadacademica_BEFORE_UPDATE` BEFORE UPDATE ON `unidadacademica` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `usuario_BEFORE_INSERT` BEFORE INSERT ON `usuario` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `usuario_BEFORE_UPDATE` BEFORE UPDATE ON `usuario` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `usuario_rol_BEFORE_INSERT` BEFORE INSERT ON `usuario_rol` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `usuario_rol_BEFORE_UPDATE` BEFORE UPDATE ON `usuario_rol` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `version_BEFORE_INSERT` BEFORE INSERT ON `version` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `version_BEFORE_UPDATE` BEFORE UPDATE ON `version` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
CREATE TRIGGER `versionanterior_BEFORE_INSERT` BEFORE INSERT ON `versionanterior` FOR EACH ROW BEGIN  if (new.auditinsert is null) then     set new.auditinsert = current_timestamp();   end if; END;;
CREATE TRIGGER `versionanterior_BEFORE_UPDATE` BEFORE UPDATE ON `versionanterior` FOR EACH ROW BEGIN    set new.auditlastupdate = current_timestamp(); END;;
DELIMITER ;
